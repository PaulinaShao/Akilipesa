name: Deploy Functions (WIF)

on:
  push:
    branches: [ main ]
    paths:
      - 'firebase/functions/**'
      - 'firebase/firestore.rules'
      - 'firebase.json'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # required for google-github-actions/auth

jobs:
  deploy:
    environment: Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          export_environment_variables: true # lets Firebase CLI use ADC

      - name: Install Firebase CLI (latest)
        run: npm i -g firebase-tools

      # ----- SEED SECRETS (idempotent) -----
      - name: Seed CF secrets
        env:
          PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
          AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
          AGORA_APP_CERT: ${{ secrets.AGORA_APP_CERT }}
          RTC_PROVIDER: ${{ vars.RTC_PROVIDER }} # optional
        run: |
          set -e
          firebase --project "$PROJECT_ID" functions:secrets:set AGORA_APP_ID --data "$AGORA_APP_ID" --force
          firebase --project "$PROJECT_ID" functions:secrets:set AGORA_APP_CERT --data "$AGORA_APP_CERT" --force
          if [ -n "$RTC_PROVIDER" ]; then
            firebase --project "$PROJECT_ID" functions:secrets:set RTC_PROVIDER --data "$RTC_PROVIDER" --force
          fi

      # ----- DEPLOY (functions + rules) -----
      - name: Deploy Functions + Firestore rules
        env:
          PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
        run: |
          firebase --project "$PROJECT_ID" deploy --only functions,firestore:rules --non-interactive
