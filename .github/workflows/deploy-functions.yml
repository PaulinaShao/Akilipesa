name: Deploy Functions (WIF)

on:
  push:
    branches: [ main ]
    paths:
      - "firebase/functions/**"
      - "firebase/firestore.rules"
      - "firebase.json"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # required for Workload Identity Federation

jobs:
  deploy:
    environment: Production   # optional; use if you protect this env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Authenticate to GCP with your WIF provider + SA (no JSON keys)
      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          project_id: akilipesa-prod
          export_environment_variables: true  # makes ADC available to gcloud/firebase

      # Install gcloud so we can call Secret Manager & any other gcloud cmds
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # (Optional but recommended) Seed/update secrets in Secret Manager.
      # If you already created the secrets once in the console, keep this anywayâ€”
      # it's idempotent and simply adds new versions when values change.
      - name: Seed Agora secrets (idempotent, Secret Manager)
        env:
          AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
          AGORA_APP_CERT: ${{ secrets.AGORA_APP_CERT }}
        run: |
          set -euo pipefail
          if [ -n "${AGORA_APP_ID:-}" ]; then
            printf '%s' "$AGORA_APP_ID"  | gcloud secrets versions add AGORA_APP_ID  --data-file=- || true
          fi
          if [ -n "${AGORA_APP_CERT:-}" ]; then
            printf '%s' "$AGORA_APP_CERT" | gcloud secrets versions add AGORA_APP_CERT --data-file=- || true
          fi

      # Build your functions
      - name: Install deps
        working-directory: firebase/functions
        run: npm ci

      - name: Build functions
        working-directory: firebase/functions
        run: npm run build

      # Install the Firebase CLI and deploy
      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy Functions + Firestore rules
        run: firebase deploy --only functions,firestore:rules --project akilipesa-prod --non-interactive
