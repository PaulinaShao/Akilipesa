name: Deploy AkiliPesa
on:
  push:
    branches: [ main ]
    paths:
      - 'firebase/functions/**'
      - 'firebase/firestore.rules'
      - 'firebase.json'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      # (Optional) build functions if using TypeScript
      - run: npm ci
        working-directory: firebase/functions
      - run: npm run build
        working-directory: firebase/functions

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@latest

      - name: Seed CF secrets (stdin)
        env:
          AGORA_APP_ID: ${{ secrets.AGORA_APP_ID }}
          AGORA_APP_CERT: ${{ secrets.AGORA_APP_CERT }}
          RTC_PROVIDER: ${{ vars.RTC_PROVIDER }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          printf "%s" "$AGORA_APP_ID"   | firebase functions:secrets:set AGORA_APP_ID   --project akilipesa-prod --force
          printf "%s" "$AGORA_APP_CERT" | firebase functions:secrets:set AGORA_APP_CERT --project akilipesa-prod --force
          printf "%s" "$RTC_PROVIDER"   | firebase functions:secrets:set RTC_PROVIDER   --project akilipesa-prod --force

      # Deploy functions + rules (add hosting/storage if you want)
      - name: Deploy to Firebase
        run: firebase deploy --only functions,firestore:rules --project akilipesa-prod --non-interactive
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
