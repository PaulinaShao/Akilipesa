name: Deploy AkiliPesa
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write   # required for OIDC

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Auth using WIF â†’ exports ADC env so firebase CLI picks it up
      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          export_environment_variables: true

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@latest

      # (Optional) build your functions if needed
      - name: Install deps (functions)
        working-directory: firebase/functions
        run: npm ci

      - name: Build functions
        working-directory: firebase/functions
        run: npm run build

      # Seed Cloud Functions secrets (idempotent)
      - name: Seed CF secrets
        env:
          PROJECT_ID: akilipesa-prod
        run: |
          firebase --version
          firebase functions:secrets:set AGORA_APP_ID --data "${{ secrets.AGORA_APP_ID }}" --project "$PROJECT_ID" --force
          firebase functions:secrets:set AGORA_APP_CERT --data "${{ secrets.AGORA_APP_CERT }}" --project "$PROJECT_ID" --force
          firebase functions:secrets:set RTC_PROVIDER --data "${{ vars.RTC_PROVIDER }}" --project "$PROJECT_ID" --force

      # Deploy Functions + Firestore rules from repo root so firebase.json is found
      - name: Deploy Functions + Firestore rules
        run: firebase deploy --only functions,firestore:rules --project akilipesa-prod --non-interactive
