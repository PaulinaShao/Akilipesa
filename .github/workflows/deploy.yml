name: Deploy AkiliPesa

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    # 1) Must match the Environment name EXACTLY as created in GitHub → Settings → Environments
    environment: Production
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      
      - run: npm ci --workspaces
      
      # Export Vite envs so the web build can read them
      - name: Export env for Vite build
        run: |
          echo "VITE_BUILDER_PUBLIC_KEY=${{ vars.VITE_BUILDER_PUBLIC_KEY }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_API_KEY=${{ vars.VITE_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_PROJECT_ID=${{ vars.VITE_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_APP_ID=${{ vars.VITE_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ vars.VITE_FIREBASE_MEASUREMENT_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ vars.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "VITE_FUNCTIONS_REGION=${{ vars.VITE_FUNCTIONS_REGION }}" >> $GITHUB_ENV
          if [ -n "${{ vars.VITE_RECAPTCHA_SITE_KEY }}" ]; then echo "VITE_RECAPTCHA_SITE_KEY=${{ vars.VITE_RECAPTCHA_SITE_KEY }}" >> $GITHUB_ENV; fi
      
      # Build Cloud Functions (TypeScript)
      - run: npm -w firebase/functions run build

      # Build the web app (Vite)
      - run: npm -w apps/web run build
      
      # (Optional) apply Make blueprints here
      # - name: Apply Make blueprints
      #   run: node infra/make/apply-blueprints.mjs
      #   env:
      #     MAKE_API_TOKEN: ${{ secrets.MAKE_API_TOKEN }}
      #     MAKE_FOLDER_ID: ${{ secrets.MAKE_FOLDER_ID }}
      
      # Deploy hosting + functions + rules + storage
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v13.5.0
        with:
          args: deploy --only hosting,functions,firestore:rules,storage -P akilipesa-prod
        env:
          # 2) Tell the action where firebase.json lives
          PROJECT_PATH: ./firebase
          # 3) Map your Environment secret (the SA JSON) to the variable the action expects
          GCP_SA_KEY: ${{ secrets.FIREBASE_TOKEN }}
